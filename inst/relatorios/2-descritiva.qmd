---
title: "Análise descritiva"
author: ABJ
date: "2023-05-22"
format: 
  html:
    code-fold: true
  docx:
    reference-doc: assets/template/template.docx
bibliography: assets/bib/geral.bib
lang: pt
execute:
  echo: false
---

```{r}
#| label: setup-pacotes-bases
#| include: false

# Bases internas
devtools::load_all(".")
```


```{r}
#| label: bases-de-dados
#| message: false
#| warning: false
#| cache: true

# - da_trf1_cjpg_pequeno: dados obtidos do TRF1 - banco de sentenças
# - da_trf1_cpopg: dados obtidos do TRF1 - consulta processual
# - da_tempo_trf1: cálculos de tempos do TRF1
# - da_rfb: dados da Receita Federal cruzando com Partes
# - da_rfb_ativo: dados da Receita Federal cruzando com Partes
# - sinesp: base de dados sobre violência do Ministério da Justiça
# - sf_amazon: shapefile da amazônia

# Bases externas

## SireneJud
da_sirenejud <- readr::read_rds("assets/rds/da_sirenejud.rds")
da_sirenejud_2grau <- readr::read_rds("assets/rds/da_sirenejud_2grau.rds")

### SireneJud - Partes
da_partes_sirenejud <- readr::read_rds("assets/rds/da_partes_sirenejud.rds")
da_partes_sirenejud_ativo <- readr::read_rds(
  "assets/rds/da_partes_sirenejud_ativo.rds"
)

## DataJud
da_datajud <- readr::read_rds("assets/rds/da_datajud.rds")
da_datajud_2grau <- readr::read_rds("assets/rds/da_datajud_2grau.rds")

```


# Introdução

O estudo completo tem como objetivo identificar e analisar as cadeias de lavagem de bens e capitais relacionadas a crimes ambientais. A pesquisa é baseada na sistematização de informações sobre os atores e processos judiciais envolvidos, examinados sob a perspectiva dos crimes ambientais e da atuação jurisdicional no assunto. Ao combinar os temas de crimes ambientais e lavagem de bens e capitais, será possível estudar as sanções previstas nas leis de combate à lavagem de dinheiro, que frequentemente são mais efetivas do que as sanções previstas nas leis de crimes ambientais. Além disso, serão geradas recomendações sobre o assunto.

A pesquisa será desenvolvida a partir de 16 perguntas norteadoras, listadas abaixo.

1. Quais são as atividades que conectam e alimentam a cadeia de fluxos de capitais que promovem o desmatamento?
2. Quem são os atores envolvidos nos casos de lavagem de dinheiro e corrupção relacionados a crimes ambientais?
3. Quais são os desafios na diferenciação entre atividades legais e ilegais para fins de identificação de fluxos de lavagem de capitais?
4. Quais as teses jurídicas de defesa mais utilizadas nas ações envolvendo lavagem de dinheiro, fluxos de capitais para atividades ambientais ilegais e lavagem de dinheiro?
5. Existem padrões identificáveis nos casos judicializados quanto às circunstâncias, características dos autores, modalidades e tipos de crimes ambientais?
6. Quais são as decisões tomadas e seus fundamentos jurídicos de fato e a razão de decidir apresentadas nesses casos?
7. Qual o papel do Poder Judiciário no combate à lavagem de dinheiro e corrupção relacionados a crimes ambientais?
8. Quais os principais segmentos econômicos ou grupos empresariais que estão envolvidos na cadeia de produção que tenha alguma relação com crime ambiental (indústria de equipamentos pesados, maquinário agrícola, maquinário de mineração, táxi aéreo, bancos e instituições financeiras de fomento agrícola, leasing)?
9. Como especificar, em caso de crimes ambientais complexos e de grande monta, os mandantes indiretos? Há pessoas jurídicas envolvidas? Há desconsideração de pessoa jurídica nesses casos?
10. Há normas de ESG (*environmental*, *social*, *and Governance*) que podem reduzir a lavagem de capitais e o fluxo de capitais para atividades ambientais ilegais?
11. Há atos normativos ou diretrizes no âmbito da Estratégia Nacional de Combate à Corrupção e à Lavagem de Dinheiro - ENCCLA, do Banco Central do Brasil e/ou do Conselho de Controle de Atividades Financeiras - COAF que podem facilitar a identificação de fluxo de capitais em matéria ambiental?
12. Há correlação entre a incidência de crimes contra a vida ou ameaça em regiões de alta ocorrência de desmatamento, ou mineração ilegal ou crimes ambientais em geral?
13. Há relação entre a ocorrência da alta incidência de demandas judiciais de conflitos fundiários com crimes ambientais ou crimes contra a vida?
14. Qual o tempo de duração médio das ações criminais que envolvam a temática ambiental? 
15. Qual a quantidade de ações criminais que apuram crimes contra a vida ou de ameaça contra pessoas ligadas à defesa do meio ambiente ou de movimentos relacionados à proteção de populações indígenas e/ou povos tradicionais que ingressam por ano? Qual o tempo de duração médio dessas ações? Quais as espécies de crime cometidas? Qual a efetividade da identificação da autoria e do cumprimento da pena?
16. Qual a quantidade de ações criminais que apuram crimes relacionados à questão fundiária que ingressam por ano? Qual o tempo de duração médio dessas ações? Quais as espécies de crime cometidas? Qual a efetividade da identificação da autoria e do cumprimento da pena?

## Objetivo

O presente relatório tem como objetivo responder às perguntas de pesquisa que podem ser investigadas do ponto de vista empírico-quantitativo. Por se tratar de um levantamento quantitativo, nem todas as questões podem ser endereçadas. Das 16 perguntas listadas acima, 7 foram efetivamente analisadas. Especificamente, as questões 1, 2, 5, 8, 12 e 14.

É importante ressaltar que, na maioria dos casos, não é possível responder às perguntas de forma completa. Por ser um tema que está na intersecção de dois tipos processuais, a identificação dos processos nem sempre é possível, especialmente considerando como fonte as bases de informações básicas, partes e movimentações processuais, como é o caso do DataJud. Ainda assim, as análises podem servir como guia para investigações mais profundas.

# Bases de dados

A análise considera três bases de processos, que chamamos de SireneJud, DataJud e TRF1. Descrevemos as bases de dados a seguir.

## SireneJud

A base do SireneJud foi fornecida pelo CNJ, a partir de uma extração realizada no dia 26/10/2022. O arquivo foi fornecido no formato CSV, contendo 637.699 linhas e 37 colunas. Diferentes versões da base podem ser acessadas a partir do [link de dados abertos da ferramenta do SireneJud](https://sirenejud.cnj.jus.br/mapa/geral).

A base de dados do SireneJud apresenta uma estrutura comum de bases de dados judiciais, contendo três unidades amostrais distintas: processos, partes e movimentações.

O primeiro passo da análise foi realizar filtros para obter uma base mais próxima do escopo da pesquisa. Infelizmente, a base do SireneJud não permite a realização de filtros que identificam de forma precisa os casos relacionados à lavagem de bens e capitais em crimes ambientais. No entanto, a base auxilia no estudo da dinâmica de crimes ambientais, com diferentes níveis de profundidade.

Os filtros aplicados no momento são:

- Considerar apenas processos originários no primeiro grau.
- Remover processos de alta complexidade.
- Remover duplicatas de número de processo (ordenamos por grau antes de tirar as duplicatas).
- Remover casos com as classes "Termo Circunstanciado" e "Inquérito Policial"
- Considerar apenas processos com origem na Amazônia Legal (AC, AM, RR, AP, PA, MA, TO, RO, MT).

Como resultado, a base ficou com 48.717 processos. A base foi utilizada na investigação das questões norteadoras 1, 2, 5, 8, 12 e 14.

## DataJud

A base do DataJud também foi fornecida pelo CNJ, em dezembro de 2022. A base contém informações de processos relacionados à corrupção e lavagem de dinheiro, que podem ou não estarem ligados a crimes ambientais.

A base de dados do DataJud apresenta uma estrutura similar à do SireneJud, com colunas comuns em bases de dados judiciais, mas agrega todas as informações ao nível de processo. Como efeito, as informações das partes e das movimentações são apresentadas de forma agregada (contagens de eventos ou partes).

A base do DataJud também passou por alguns filtros antes de ser analisada:

- Considerar apenas processos originários no primeiro grau.
- Remover duplicatas de número de processo.
- Remover casos com as classes "Termo Circunstanciado" e "Inquérito Policial".
- Remover casos com alguns assuntos relacionados a posse de drogas para uso pessoal, furto e concussão.
- Considerar apenas processos com origem nas mesmas unidades jurisdicionais dos processos do SireneJud.

Como resultado, a base ficou com 184.879 processos. A base foi utilizada na investigação das questões 1, 2, 5 e 12.

## TRF1

A base do TRF1 foi obtida via raspagem de dados a partir do banco de decisões do TRF1. Raspagem de dados é um processo de extração de informações de fontes da web, como sites, APIs e arquivos, e armazenamento dos dados coletados em um formato estruturado, como uma planilha ou banco de dados. Esse processo é realizado com o uso de linguagens de programação, que automatizam a extração de dados da web. 

A raspagem de dados pode ser usada para coletar dados de várias fontes, sendo uma prática comum para acessar dados que são públicos, mas não são abertos, como é o caso da maior parte dos tribunais brasileiros. É importante destacar que a raspagem de dados só é necessária quando os dados não são abertos: os estudos seriam significativamente facilitados se os tribunais disponibilizassem os dados em formatos eletrônicos legíveis por máquina e não proprietários.

A vantagem da base do TRF1 é que ela é obtida a partir da consulta de palavras-chave nos textos das decisões. Isso permite uma pesquisa mais focada, já que é possível buscar por termos relacionados a questões ambientais juntamente com termos relacionados a lavagem de bens e capitais ou corrupção.

Para construir a base, partimos de algumas palavras-chave envolvendo a temática de crimes ambientais para obter uma lista inicial de processos. A lista foi, então, refinada, para obter informações de processos que se relacionam com corrupção e lavagem de bens e capitais.

Os termos utilizados para captura da primeira lista de processos foram: garimpo, desmatamento, mineração, invasão e grilagem. Os termos foram pesquisados com variações, como existência ou não de acentos e flexões das palavras (por exemplo, garimpo, garimpeiro, etc).

A primeira base obtida dessa forma tinha 32.046 processos. As informações disponíveis são bastante limitadas: o número do processo, o resumo da decisão e o texto da decisão.

A base foi, então, filtrada, com o objetivo de listar casos que podem estar dentro do escopo. Aqui existem duas versões da base: a primeira contém informações de todos os processos envolvendo questões ambientais dentro do recorte temporal e regional da pesquisa, enquanto a segunda contém, além dos recortes anteriores, filtros relacionados à lavagem e corrupção. 

A primeira base contém 10.241 processos. A base foi enriquecida com informações da consulta processual (antiga) do TRF1. Os dados também foram obtidos via raspagem de dados, que permitiu a extração de dados como classe, vara, juiz, localização, movimentações e partes. Infelizmente, as partes só estão disponíveis em 2.936 processos.

A segunda base contém apenas 227 processos. Ao aplicar os filtros sobre lavagem e corrupção (especificamente: organização/associação criminosa, quadrilha, lavagem, corrupção, operação), sobram poucos casos a serem considerados.

A base grande do TRF1 foi utilizada para responder às questões 2, 5 e 14. Já a base pequena do TRF1 foi utilizada para responder à questão 1.

## Limitações

Abaixo, explicamos os motivos de algumas questões não serem investigadas, total ou parcialmente, por conta das limitações das bases de dados. Além disso, mencionamos quais seriam os dados necessários para que as perguntas possam ser respondidas integralmente. É importante que muitas dessas informações não existem de forma estruturada no momento,  podendo ser interpretadas como sugestões de melhorias dos dados públicos para utilização em estudos futuros. 

```{r}
readxl::read_excel("assets/xlsx/limitacoes.xlsx") |> 
  knitr::kable()
```

## Dashboard

Para complementar as análises do presente relatório, um [painel de análises estatísticas foi desenvolvido](https://abjur.shinyapps.io/ambientalCNJ/). O painel apresenta informações que reforçam os achados da análise jurimétrica realizada. Por meio dos gráficos específicos disponibilizados no painel, é possível visualizar os dados relacionados aos processos ambientais aplicando filtros. Por exemplo, filtrando pelo TJAM, é possível obter os resultados da pesquisa (assuntos mais comuns, mapa e tempo dos processos) somente para o TJAM, como indicado na figura abaixo. 

```{r}
#| label: fig-dashboard1
#| fig-cap: Filtro no dashboard da base SirejeJud em processos do TJAM.

knitr::include_graphics("assets/img/dashboard1.png")
```

Outro filtro relevante é o de ano do processo, que permite identificar os padrões (tempo,  assuntos, distribuição regional) no período selecionado. Essa informação é útil para compreender a distribuição temporal dos processos e pode auxiliar na identificação de períodos mais críticos. Ao relacionar esses dados com as respostas da análise descritiva, é possível fortalecer as conclusões sobre a distribuição dos processos e a atuação do sistema jurídico em diferentes localidades.

```{r}
#| label: fig-dashboard2
#| fig-cap: Filtro no dashboard da base SirejeJud em processos entre 2011 e 2015.

knitr::include_graphics("assets/img/dashboard2.png")
```



# Análises

A seguir, apresentamos investigações sobre as questões norteadoras. Cada subseção é de uma das questões. As investigações mostram os resultados principais da análise descritiva.

## Questão 1

__Questão__: Quais são as atividades que conectam e alimentam a cadeia de fluxos de capitais que promovem o desmatamento?

### SireneJud

O SireneJud oferece informações limitadas sobre essa questão. As informações disponíveis na base que podem trazer insumos são os assuntos dos processos e a localização dos processos.

```{r}
#| label: contagens-gerais
n_estadual <- sum(da_sirenejud$trib_esfera == "Estadual")
n_federal <- nrow(da_sirenejud) - n_estadual

lab_estadual = glue::glue("{n_estadual} ({scales::percent(n_estadual/nrow(da_sirenejud))})")

lab_tribunal_maior <- da_sirenejud |> 
  dplyr::filter(trib_esfera == "Estadual") |> 
  dplyr::count(trib_tribunal, sort = TRUE) |> 
  dplyr::mutate(prop = scales::percent(n/sum(n), .1)) |> 
  dplyr::slice_head(n = 1) |> 
  with(glue::glue("{trib_tribunal}, com {n} ({prop})"))

```

Do total de `r nrow(da_sirenejud)` processos, `r lab_estadual` são estaduais. Dentre os processos estaduais, o tribunal mais comum é o `r lab_tribunal_maior` dos processos estaduais.

As 10 classes mais comuns dos processos estão na @tbl-classe. A classe com maior volume de processos é a ação civil pública. Essa classe geralmente não é a mais frequente em análises de processos, sendo uma característica específica desta base de dados.

```{r}
#| label: tbl-classe
#| tbl-cap: "Dez classes mais comuns."
da_sirenejud |> 
  dplyr::mutate(
    sgt_nm_classe = forcats::fct_lump_n(
      sgt_nm_classe, 10, other_level = "Outros"
    ),
    sgt_nm_classe = forcats::fct_infreq(sgt_nm_classe),
    sgt_nm_classe = forcats::fct_other(
      sgt_nm_classe, drop = "Outros", other_level = "Outros"
    )
  ) |> 
  dplyr::count(sgt_nm_classe) |> 
  dplyr::mutate(prop = formattable::percent(n/sum(n),1)) |> 
  janitor::adorn_totals() |> 
  knitr::kable(
    col.names = c("Classe", "N", "%")
  )
```

Os 10 assuntos mais comuns estão na @tbl-assunto. É possível notar que assuntos genéricos como "Dano Ambiental" e "Flora" estão bastante presentes nos dados. Por isso, é difícil medir quais são as atividades que conectam e alimentam a cadeia de fluxos de capitais que promovem o desmatamento apenas com essa informação.

```{r}
#| label: tbl-assunto
#| tbl-cap: "Dez assuntos mais comuns. Um processo pode ter mais de um assunto."
da_sirenejud |> 
  tidyr::unnest(sgt_nm_assunto) |> 
  dplyr::mutate(
    sgt_nm_assunto = forcats::fct_lump_n(
      sgt_nm_assunto, 10, other_level = "Outros"
    ),
    sgt_nm_assunto = forcats::fct_infreq(sgt_nm_assunto),
    sgt_nm_assunto = forcats::fct_other(
      sgt_nm_assunto, drop = "Outros", other_level = "Outros"
    )
  ) |> 
  dplyr::count(sgt_nm_assunto) |> 
  dplyr::mutate(prop = formattable::percent(n/sum(n),1)) |> 
  janitor::adorn_totals() |> 
  knitr::kable(
    col.names = c("Assunto", "N", "%")
  )
```

A @fig-mapa mostra os pontos em que os processos foram distribuídos. Os pontos fora da área demarcada indicam processos do Maranhão que estão fora da Amazônia Legal. Os cinco municípios com mais processos são: Cuiabá, Porto Velho, Belém, Manaus e Altamira.

```{r}
#| label: fig-mapa
#| fig-cap: "Pontos de distribuição dos processos"
da_sirenejud |> 
  dplyr::count(loc_lon, loc_lat) |> 
  ggplot2::ggplot() +
  ggplot2::geom_sf(data = sf_amazon) +
  ggplot2::geom_point(
    ggplot2::aes(loc_lon, loc_lat, size = n, alpha = n),
    colour = viridis::viridis(1,1,.2,.8)
  ) +
  ggplot2::theme_void()
```

A @tbl-municipios mostra os 10 municípios com mais processos. A maioria são capitais, o que é esperado, já que são municípios mais populosos.

```{r}
#| label: tbl-municipios
#| tbl-cap: "Municípios com mais processos."
da_sirenejud |> 
  dplyr::mutate(
    loc_muni = paste(stringr::str_to_title(loc_muni), loc_uf, sep = " / "),
    loc_muni = forcats::fct_lump_n(
      loc_muni, 10, other_level = "Outros"
    ),
    loc_muni = forcats::fct_infreq(loc_muni),
    loc_muni = forcats::fct_other(
      loc_muni, drop = "Outros", other_level = "Outros"
    )
  ) |> 
  dplyr::count(loc_muni) |> 
  dplyr::mutate(prop = formattable::percent(n/sum(n),1)) |> 
  janitor::adorn_totals() |> 
  knitr::kable(
    col.names = c("Município/UF", "N", "%")
  )
```

A @tbl-ilg mostra os municípios com maior litigiosidade (processos por 100 mil habitantes). É possível identificar que vários municípios pequenos (com menos de 10 mil habitantes) figuram entre os mais litigiosos.

```{r}
#| label: tbl-ilg
#| tbl-cap: "Municípios com mais litigiosidade, considerando população do Censo IBGE de 2010."

da_sirenejud |> 
  dplyr::mutate(
    loc_muni = paste(stringr::str_to_title(loc_muni), loc_uf, sep = " / ")
  ) |> 
  dplyr::group_by(loc_muni) |> 
  dplyr::summarise(
    n = dplyr::n(),
    ilg = round(dplyr::n() / dplyr::first(pop) * 1e5, 1),
  ) |> 
  dplyr::arrange(dplyr::desc(ilg)) |> 
  dplyr::slice_head(n = 10) |> 
  knitr::kable(
    col.names = c("Município/UF", "N", "ILG")
  )
```

A @tbl-ilg-50k mostra os municípios com maior litigiosidade, considerando somente municípios com mais de 50 mil habitantes. Novamente aparecem algumas capitais e figuram entre os mais litigiosos o município de Altamira, que é o município com maior área no país.

```{r}
#| label: tbl-ilg-50k
#| tbl-cap: "Municípios com mais litigiosidade."

da_sirenejud |> 
  dplyr::mutate(
    loc_muni = paste(stringr::str_to_title(loc_muni), loc_uf, sep = " / ")
  ) |> 
  dplyr::filter(pop > 5e4) |> 
  dplyr::group_by(loc_muni) |> 
  dplyr::summarise(
    n = dplyr::n(),
    ilg = round(dplyr::n() / dplyr::first(pop) * 1e5, 1)
  ) |> 
  dplyr::arrange(dplyr::desc(ilg)) |> 
  dplyr::slice_head(n = 10) |> 
  knitr::kable(
    col.names = c("Município/UF", "N", "Processos/100k hab.")
  )
```

A análise anterior sugere que seja realizado de quantidade de processos por 1000km² de área do município. A @tbl-ila-50k mostra os municípios com maior litigiosidade por área, considerando somente municípios com mais de 5000 km² de área. Novamente aparecem algumas capitais e figura entre os mais litigiosos o município de Cuiabá.

```{r}
#| label: tbl-ila-50k
#| tbl-cap: Municípios com maiores taxas de processos por mil quilômetros quadrados.
da_sirenejud |> 
  dplyr::mutate(
    loc_muni = paste(stringr::str_to_title(loc_muni), loc_uf, sep = " / ")
  ) |> 
  dplyr::filter(area > 5000) |> 
  dplyr::group_by(loc_muni) |> 
  dplyr::summarise(
    n = dplyr::n(),
    ilg = round(dplyr::n() / dplyr::first(area) * 1000, 1)
  ) |> 
  dplyr::arrange(dplyr::desc(ilg)) |> 
  dplyr::slice_head(n = 10) |> 
  knitr::kable(
    col.names = c("Município/UF", "N", "Processos/1000 km²")
  )
```

Uma análise de interesse é correlacionar a litigiosidade com o desmatamento. Para isso, foi obtida uma base do sistema PRODES, de onde é possível calcular o percentual de área desmatada com relação à área total do município. Tais dados foram confrontados com o índice de litigiosidade (casos novos por 100.000 habitantes). O resultado é a @fig-ilg-desmatamento-sirenejud, mostrando que as quantidades não são correlacionadas.

```{r}
#| label: fig-ilg-desmatamento-sirenejud
#| fig-cap: Gráfico de dispersão mostrando a relação entre a litigiosidade e o percentual de desmatamento do município.
#| message: false
#| warning: false
da_sirenejud |> 
  dplyr::mutate(
    loc_muni = paste(stringr::str_to_title(loc_muni), loc_uf, sep = " / ")
  ) |> 
  dplyr::group_by(loc_muni) |> 
  dplyr::summarise(
    n = dplyr::n(),
    ilg = round(dplyr::n() / dplyr::first(pop) * 1e5, 1),
    desmatado_pct = dplyr::first(desmatado_pct)
  ) |> 
  ggplot2::ggplot() +
  ggplot2::aes(x = desmatado_pct, y = ilg) +
  ggplot2::geom_point(
    colour = viridis::viridis(1, 1, .2, .8)
  ) +
  ggplot2::geom_smooth() +
  ggplot2::scale_x_continuous(labels = scales::percent) +
  ggplot2::labs(
    x = "Percentual da área desmatada",
    y = "Casos novos /\n(100.000 habitantes)"
  ) +
  ggplot2::theme_minimal()
```

#### Segundo grau

Abaixo, repetimos algumas análises considerando a base do segundo grau do SireneJud. A base foi construída utilizando os mesmos filtros que a base do primeiro grau, moficiando apenas o filtro da instância.

```{r}
#| label: contagens-gerais-2grau
n_estadual <- sum(da_sirenejud_2grau$trib_esfera == "Estadual")
n_federal <- nrow(da_sirenejud_2grau) - n_estadual

lab_estadual = glue::glue("{n_estadual} ({scales::percent(n_estadual/nrow(da_sirenejud_2grau))})")

lab_tribunal_maior <- da_sirenejud_2grau |> 
  dplyr::filter(trib_esfera == "Estadual") |> 
  dplyr::count(trib_tribunal, sort = TRUE) |> 
  dplyr::mutate(prop = scales::percent(n/sum(n), .1)) |> 
  dplyr::slice_head(n = 1) |> 
  with(glue::glue("{trib_tribunal}, com {n} ({prop})"))

```

Do total de `r nrow(da_sirenejud_2grau)` processos, `r lab_estadual` são estaduais. Dentre os processos estaduais, o tribunal mais comum é o `r lab_tribunal_maior` dos processos estaduais.

As 10 classes mais comuns dos processos estão na @tbl-classe-2grau. A classe com maior volume de processos é a apelação cível, seguida por agravos de instrumento. As classes fazem sentido, considerando que o segundo grau costuma ser formado basicamente de apelações e agravos.

```{r}
#| label: tbl-classe-2grau
#| tbl-cap: "Dez classes mais comuns no segundo grau."
da_sirenejud_2grau |> 
  dplyr::mutate(
    sgt_nm_classe = forcats::fct_lump_n(
      sgt_nm_classe, 10, other_level = "Outros"
    ),
    sgt_nm_classe = forcats::fct_infreq(sgt_nm_classe),
    sgt_nm_classe = forcats::fct_other(
      sgt_nm_classe, drop = "Outros", other_level = "Outros"
    )
  ) |> 
  dplyr::count(sgt_nm_classe) |> 
  dplyr::mutate(prop = formattable::percent(n/sum(n),1)) |> 
  janitor::adorn_totals() |> 
  knitr::kable(
    col.names = c("Classe", "N", "%")
  )
```

Os 10 assuntos mais comuns estão na @tbl-assunto-2grau. É possível notar que assuntos genéricos como "Dano Ambiental" continuam bastante presentes nos dados. Por isso, é difícil medir quais são as atividades que conectam e alimentam a cadeia de fluxos de capitais que promovem o desmatamento apenas com essa informação.

```{r}
#| label: tbl-assunto-2grau
#| tbl-cap: "Dez assuntos mais comuns no segundo grau. Um processo pode ter mais de um assunto."
da_sirenejud_2grau |> 
  tidyr::unnest(sgt_nm_assunto) |> 
  dplyr::mutate(
    sgt_nm_assunto = forcats::fct_lump_n(
      sgt_nm_assunto, 10, other_level = "Outros"
    ),
    sgt_nm_assunto = forcats::fct_infreq(sgt_nm_assunto),
    sgt_nm_assunto = forcats::fct_other(
      sgt_nm_assunto, drop = "Outros", other_level = "Outros"
    )
  ) |> 
  dplyr::count(sgt_nm_assunto) |> 
  dplyr::mutate(prop = formattable::percent(n/sum(n),1)) |> 
  janitor::adorn_totals() |> 
  knitr::kable(
    col.names = c("Assunto", "N", "%")
  )
```

A @tbl-tribunais-2grau mostra os tribunais que mais aparecem no segundo grau. Pará e Mato Grosso figuram entre os mais frequentes.

```{r}
#| label: tbl-tribunais-2grau
#| tbl-cap: "Tribunais mais comuns nos processos de segundo grau."
da_sirenejud_2grau |> 
  dplyr::mutate(
    loc_muni = paste(stringr::str_to_title(loc_muni), loc_uf, sep = " / "),
    loc_muni = forcats::fct_lump_n(
      loc_muni, 10, other_level = "Outros"
    ),
    loc_muni = forcats::fct_infreq(loc_muni),
    loc_muni = forcats::fct_other(
      loc_muni, drop = "Outros", other_level = "Outros"
    )
  ) |> 
  dplyr::count(loc_uf, sort = TRUE) |> 
  dplyr::mutate(prop = formattable::percent(n/sum(n),1)) |> 
  janitor::adorn_totals() |> 
  knitr::kable(
    col.names = c("UF", "N", "%")
  )
```

### DataJud

Com relação ao DataJud, a única análise de interesse é nos assuntos dos processos. Ainda assim, a análise é bastante limitada, já que não possui o filtro de processos ambientais. Pode-se dizer, apenas, que nas regiões estudadas esses são os tipos de processos mais comuns.

A @tbl-assuntos-datajud mostra os assuntos mais comuns dos processos. É possível notar que assuntos relacionados a tráfico de drogas são os mais frequentes, seguidos de peculato e quadrilha/bando.


```{r}
#| label: tbl-assuntos-datajud
#| tbl-cap: "Assuntos com mais processos."

da_datajud |> 
  dplyr::mutate(
    assunto = forcats::fct_lump_n(
      assunto, 10, other_level = "Outros"
    ),
    assunto = forcats::fct_infreq(assunto),
    assunto = forcats::fct_other(
      assunto, drop = "Outros", other_level = "Outros"
    ),
    assunto = forcats::fct_na_value_to_level(assunto, "(vazio)")
  ) |> 
  dplyr::count(assunto) |> 
  dplyr::mutate(prop = formattable::percent(n/sum(n),1)) |> 
  janitor::adorn_totals() |> 
  knitr::kable(
    col.names = c("Assunto", "N", "%")
  )
```

A @fig-mapa-datajud mostra os pontos em que os processos foram distribuídos. Os pontos fora da área demarcada indicam processos do Maranhão que estão fora da Amazônia Legal. Os cinco municípios com mais processos são: Belém, Boa Vista, São Luís, Rio Branco e Manaus.

```{r}
#| label: fig-mapa-datajud
#| fig-cap: "Pontos de distribuição dos processos"
da_datajud |> 
  dplyr::count(lon, lat) |> 
  ggplot2::ggplot() +
  ggplot2::geom_sf(data = sf_amazon) +
  ggplot2::geom_point(
    ggplot2::aes(lon, lat, size = n, alpha = n),
    colour = viridis::viridis(1,1,.2,.8)
  ) +
  ggplot2::theme_void()
```

A @tbl-municipios-datajud mostra os 10 municípios com mais processos. A maioria são capitais, o que é esperado, já que são municípios mais populosos.

```{r}
#| label: tbl-municipios-datajud
#| tbl-cap: "Municípios com mais processos."
da_datajud |> 
  dplyr::mutate(
    nome = paste(stringr::str_to_title(muni_nm), uf_nm, sep = " / "),
    nome = forcats::fct_lump_n(
      nome, 10, other_level = "Outros"
    ),
    nome = forcats::fct_infreq(nome),
    nome = forcats::fct_other(
      nome, drop = "Outros", other_level = "Outros"
    )
  ) |> 
  dplyr::count(nome) |> 
  dplyr::mutate(prop = formattable::percent(n/sum(n),1)) |> 
  janitor::adorn_totals() |> 
  knitr::kable(
    col.names = c("Município/UF", "N", "%")
  )
```

A @tbl-ilg-datajud mostra os municípios com maior litigiosidade (processos por 100 mil habitantes). É possível identificar que vários municípios pequenos (com menos de 10 mil habitantes) figuram entre os mais litigiosos.

```{r}
#| label: tbl-ilg-datajud
#| tbl-cap: "Municípios com mais litigiosidade. Considerada população do Censo IBGE de 2010."

da_datajud |> 
  dplyr::mutate(
    nome = paste(stringr::str_to_title(muni_nm), uf_nm, sep = " / ")
  ) |> 
  dplyr::group_by(nome) |> 
  dplyr::summarise(
    n = dplyr::n(),
    ilg = round(dplyr::n() / dplyr::first(pop) * 1e5, 1)
  ) |> 
  dplyr::arrange(dplyr::desc(ilg)) |> 
  dplyr::slice_head(n = 10) |> 
  knitr::kable(
    col.names = c("Município/UF", "N", "ILG")
  )
```

A @tbl-ilg-50k-datajud mostra os municípios com maior litigiosidade, considerando somente municípios com mais de 50 mil habitantes. Novamente aparecem algumas capitais e figuram entre os mais litigiosos o município de Cáceres/MT.

```{r}
#| label: tbl-ilg-50k-datajud
#| tbl-cap: Municípios com mais litigiosidade.

da_datajud |> 
  dplyr::mutate(
    nome = paste(stringr::str_to_title(muni_nm), uf_nm, sep = " / ")
  ) |> 
  dplyr::filter(pop > 5e4) |> 
  dplyr::group_by(nome) |> 
  dplyr::summarise(
    n = dplyr::n(),
    ilg = round(dplyr::n() / dplyr::first(pop) * 1e5, 1)
  ) |> 
  dplyr::arrange(dplyr::desc(ilg)) |> 
  dplyr::slice_head(n = 10) |> 
  knitr::kable(
    col.names = c("Município/UF", "N", "Processos/100k hab.")
  )
```

A @tbl-ila-50k-datajud mostra os municípios com maior litigiosidade por área, considerando somente municípios com mais de 5000 km² de área. Novamente aparecem algumas capitais e figura entre os mais litigiosos o município de Cuiabá.

```{r}
#| label: tbl-ila-50k-datajud
#| tbl-cap: Municípios com maiores taxas de processos por mil quilômetros quadrados.
da_datajud |> 
  dplyr::mutate(
    nome = paste(stringr::str_to_title(muni_nm), uf_nm, sep = " / ")
  ) |> 
  dplyr::filter(area > 5000) |> 
  dplyr::group_by(muni_nm) |> 
  dplyr::summarise(
    n = dplyr::n(),
    ilg = round(dplyr::n() / dplyr::first(area) * 1000, 1)
  ) |> 
  dplyr::arrange(dplyr::desc(ilg)) |> 
  dplyr::slice_head(n = 10) |> 
  knitr::kable(
    col.names = c("Município/UF", "N", "Processos/1000 km²")
  )
```

Uma análise de interesse é correlacionar a litigiosidade com o desmatamento. Para isso, foi obtida uma base do sistema PRODES, de onde é possível calcular o percentual de área desmatada com relação à área total do município. O resultado é a @fig-ilg-desmatamento-datajud, que mostra que as quantidades não são correlacionadas.

```{r}
#| label: fig-ilg-desmatamento-datajud
#| fig-cap: Gráfico de dispersão mostrando a relação entre a litigiosidade e o percentual de desmatamento do município.
#| message: false
#| warning: false
da_datajud |> 
  dplyr::mutate(
    nome = paste(stringr::str_to_title(muni_nm), uf_nm, sep = " / ")
  ) |> 
  dplyr::group_by(nome) |> 
  dplyr::summarise(
    n = dplyr::n(),
    ilg = round(dplyr::n() / dplyr::first(pop) * 1e5, 1),
    desmatado_pct = dplyr::first(desmatado_pct)
  ) |> 
  ggplot2::ggplot() +
  ggplot2::aes(x = desmatado_pct, y = ilg) +
  ggplot2::geom_point(
    colour = viridis::viridis(1, 1, .2, .8)
  ) +
  ggplot2::geom_smooth() +
  ggplot2::scale_x_continuous(labels = scales::percent) +
  ggplot2::labs(
    x = "Percentual da área desmatada",
    y = "Casos novos /\n(100.000 habitantes)"
  ) +
  ggplot2::theme_minimal()
```


#### Segundo grau

Abaixo, repetimos algumas análises considerando a base do segundo grau do DataJud. A base foi construída utilizando os mesmos filtros que a base do primeiro grau, moficiando apenas o filtro da instância.

Os 10 assuntos mais comuns estão na @tbl-assunto-datajud-2grau. Assuntos relacionados a tráfico de drogas são os mais frequentes, seguidos de quadrilha ou bando, mas com um percentual bem menor.

```{r}
#| label: tbl-assunto-datajud-2grau
#| tbl-cap: "Dez assuntos mais comuns no segundo grau. Um processo pode ter mais de um assunto."
da_datajud_2grau |> 
  dplyr::mutate(
    assunto = tidyr::replace_na(assunto, "(Vazio)"),
    assunto = forcats::fct_lump_n(
      assunto, 10, other_level = "Outros"
    ),
    assunto = forcats::fct_infreq(assunto),
    assunto = forcats::fct_other(
      assunto, drop = "Outros", other_level = "Outros"
    )
  ) |> 
  dplyr::count(assunto) |> 
  dplyr::mutate(prop = formattable::percent(n/sum(n),1)) |> 
  janitor::adorn_totals() |> 
  knitr::kable(
    col.names = c("Assunto", "N", "%")
  )
```

A @tbl-tribunais-datajud-2grau mostra os tribunais que mais aparecem no segundo grau. Assim como no SireneJud, Pará e Mato Grosso figuram entre os mais frequentes.

```{r}
#| label: tbl-tribunais-datajud-2grau
#| tbl-cap: "Tribunais mais comuns nos processos de segundo grau."
da_datajud_2grau |>
  dplyr::count(sigla, sort = TRUE) |> 
  dplyr::mutate(sigla = stringr::str_remove(sigla, "TJ")) |> 
  dplyr::mutate(prop = formattable::percent(n/sum(n),1)) |> 
  janitor::adorn_totals() |> 
  knitr::kable(
    col.names = c("UF", "N", "%")
  )
```

### TRF1

A análise no TRF1 foi baseada na quantidade e proporção de casos que apareceram nas consultas de processos. Apesar de ser mais curta, a análise pode dar informações um pouco mais relevantes do que as análises anteriores, que se baseiam apenas em estatísticas gerais.

A @tbl-tema-trf1 mostra as atividades com maior volume processual na base pequena do TRF1. É possível notar que o desmatamento é a atividade que mais aparece na consulta, seguida por garimpo.

```{r}
#| label: tbl-tema-trf1
#| tbl-cap: Atividades com maior volume processual no TRF1.
da_trf1_cjpg_pequeno |> 
  dplyr::mutate(
    tema = basename(dirname(dirname(file))),
    tema = dplyr::case_match(
      tema,
      c("desmatamento") ~ "Desmatamento",
      c("garimpo") ~ "Garimpo",
      c("grilagem") ~ "Grilagem",
      c("invasao", "invasatilde") ~ "Invasão",
      c("minerac", "mineraccedil") ~ "Mineração"
    )
  ) |> 
  dplyr::count(tema, sort = TRUE) |> 
  dplyr::mutate(prop = formattable::percent(n/sum(n),1)) |> 
  janitor::adorn_totals() |> 
  knitr::kable(col.names = c("Tema", "N", "%"))
```

### Discussão

As análises mostradas acima são apenas um guia para responder à questão norteadora. Os resultados indicam que a atividade mais comum é o desmatamento, seguida pelo garimpo. Além disso, as análises do DataJud e SireneJud, apesar de limitadas, mostram regiões e assuntos processuais que podem estar relacionados ao tema de interesse.

## Questão 2

__Questão__: Quem são os atores envolvidos nos casos de lavagem de dinheiro e corrupção relacionados a crimes ambientais?

### SireneJud

A @tbl-tipo-pessoa mostra os tipos de pessoas que estão no polo passivo. A maior parte é de pessoas físicas, sendo que quase 2% da base possui autoridades, órgão de representação ou valores vazios.

```{r}
#| label: tbl-tipo-pessoa
#| tbl-cap: "Tipos de pessoas"
da_partes_sirenejud |> 
  dplyr::count(tipo_pessoa, sort = TRUE) |> 
  dplyr::mutate(prop = formattable::percent(n/sum(n),1)) |> 
  janitor::adorn_totals() |> 
  knitr::kable(
    col.names = c("Tipo de pessoa", "N", "%")
  )
```

Vamos analisar apenas as pessoas jurídicas. Dentre as partes, aproximadamente 4% têm CNPJ vazio e 96% preenchido. No total, são cerca de 8000 CNPJs distintos e com 14 dígitos, que foram pesquisados na base de dados abertos da Receita Federal do Brasil (RFB). Quase a totalidade (99%) foram encontrados. Alguns resultados disso foram colocados a seguir.

```{r}
#| label: join
da_partes_rfb <- da_partes_sirenejud |> 
  dplyr::inner_join(da_rfb, c("numero_documento_principal" = "cnpj"))
```

A @tbl-litigantes-passivo mostra os quinze maiores litigantes no polo passivo. O nome que mais aparece é o vazio, que são casos em que o campo do CNPJ está vazio. Outros nomes da lista não fazem muito sentido estarem no polo passivo. Das empresas privadas, destacam-se as empresas de energia.

```{r}
#| label: tbl-litigantes-passivo
#| tbl-cap: "10 Maiores litigantes nos processos"

da_partes_rfb |> 
  # dplyr::semi_join(
  #   da_sirenejud |> dplyr::filter(trib_esfera == "Estadual"),
  #   "id_processo"
  # ) |> 
  dplyr::group_by(nome_fantasia) |> 
  dplyr::summarise(n_processos = dplyr::n_distinct(id_processo)) |> 
  dplyr::arrange(dplyr::desc(n_processos)) |> 
  dplyr::mutate(
    prop = formattable::percent(n_processos/nrow(da_sirenejud)),
    nome_fantasia = tidyr::replace_na(nome_fantasia, "(vazio)")
  ) |> 
  head(15) |> 
  knitr::kable(
    col.names = c("Nome fantasia", "Número de processos", "%")
  )

```

A @tbl-litigantes-ativo mostra os quinze maiores litigantes no polo ativo. Como esperado, figuram entre os maiores litigantes os ministérios públicos e procuradorias.

```{r}
#| label: tbl-litigantes-ativo
#| tbl-cap: "10 Maiores litigantes nos processos"


da_partes_rfb_ativo <- da_partes_sirenejud_ativo |> 
  dplyr::inner_join(da_rfb_ativo, c("numero_documento_principal" = "cnpj"))

da_partes_rfb_ativo |> 
  # dplyr::semi_join(
  #   da_sirenejud |> dplyr::filter(trib_esfera == "Estadual"),
  #   "id_processo"
  # ) |> 
  dplyr::group_by(nome_fantasia) |> 
  dplyr::summarise(n_processos = dplyr::n_distinct(id_processo)) |> 
  dplyr::arrange(dplyr::desc(n_processos)) |> 
  dplyr::mutate(
    prop = formattable::percent(n_processos/nrow(da_sirenejud)),
    nome_fantasia = tidyr::replace_na(nome_fantasia, "(vazio)")
  ) |> 
  head(15) |> 
  knitr::kable(
    col.names = c("Nome fantasia", "Número de processos", "%")
  )

```

A @tbl-cnae mostra as atividades principais das empresas no polo passivo, de acordo com a informação da "Classe" da tabela CNAE. Os casos de "administração pública em geral" provavelmente se referem a diferentes entidades públicas.

```{r}
#| label: tbl-cnae
#| tbl-cap: "Quantidade de partes-processos por tipo de atividade."

da_partes_rfb |> 
  dplyr::select(id_processo, cnae_principal, situacao, matriz) |> 
  dplyr::inner_join(qsacnpj::tab_cnae, c("cnae_principal" = "cod_cnae")) |> 
  dplyr::group_by(nm_classe) |> 
  dplyr::summarise(n_processos = dplyr::n_distinct(id_processo)) |> 
  dplyr::arrange(dplyr::desc(n_processos)) |> 
  dplyr::mutate(
    prop = formattable::percent(n_processos/nrow(da_sirenejud))
  ) |> 
  head(n = 10) |> 
  knitr::kable(
    col.names = c("Tipo de atividade", "N", "%")
  )
```

### DataJud

A base do DataJud não disponibiliza nome nem CNPJ das partes, o que impossibilita análises sobre perfil das partes.

### TRF1

A base do TRF1 não disponibiliza o CNPJ das partes, o que impossibilita a realização de análises mais aprofundadas. A única análise feita foi dos maiores litigantes no polo passivo, listados na @tbl-litigantes-trf1. As formas de participação para determinar as partes no polo passivo foram: "réu", "requerido", "executado" e "impetrado". Os nomes passaram por um processo de padronização, mas ainda podem estar com problemas de taxonomia.

```{r}
#| label: tbl-litigantes-trf1
#| tbl-cap: Lista dos maiores litigantes no polo passivo, no TRF1 (base grande).
da_trf1_cpopg |> 
  dplyr::mutate(id_processo = basename(file)) |> 
  # dplyr::semi_join(da_trf1_cjpg_pequeno, "id_processo") |> 
  tidyr::unnest(partes) |>
  dplyr::filter(tipo %in% c("RÃ©u", "REQDO.", "EXCDO", "Executado", "Impetrado")) |> 
  dplyr::mutate(nome = dplyr::case_when(
    stringr::str_detect(nome, "IBAMA|RENOVAV") ~ "IBAMA",
    stringr::str_detect(nome, "INCRA") ~ "INCRA",
    stringr::str_detect(nome, "INSS|SEGURO SOCIAL") ~ "INSS",
    stringr::str_detect(nome, "UNIAO") ~ "UNIAO",
    stringr::str_detect(nome, "FUNAI") ~ "FUNAI",
    TRUE ~ nome
  )) |> 
  dplyr::mutate(
    nome = forcats::fct_lump_n(
      nome, 8, other_level = "Outros"
    ),
    nome = forcats::fct_infreq(nome),
    nome = forcats::fct_other(
      nome, drop = "Outros", other_level = "Outros"
    )
  ) |> 
  dplyr::count(nome) |> 
  dplyr::mutate(prop = formattable::percent(n/sum(n),1)) |> 
  knitr::kable(col.names = c("Nome", "N", "%"))
```

A @tbl-litigantes-trf1-ativo mostra os maiores litigantes no polo ativo. As formas de participação para determinar as partes no polo ativo foram: "autor", "requerente", "exequente" e "impetrante". Os nomes passaram por um processo de padronização, mas ainda podem estar com problemas de taxonomia.


```{r}
#| label: tbl-litigantes-trf1-ativo
#| tbl-cap: Lista dos maiores litigantes no polo ativo, no TRF1 (base grande).
da_trf1_cpopg |> 
  dplyr::mutate(id_processo = basename(file)) |> 
  # dplyr::semi_join(da_trf1_cjpg_pequeno, "id_processo") |> 
  tidyr::unnest(partes) |>
  dplyr::filter(tipo %in% c("Autor", "Exequente", "EXQTE", "REQTE.", "IMPETRANTE", "IMPTE")) |> 
  dplyr::mutate(nome = dplyr::case_when(
    stringr::str_detect(nome, "IBAMA|RENOVAV") ~ "IBAMA",
    stringr::str_detect(nome, "INCRA") ~ "INCRA",
    stringr::str_detect(nome, "INSS|SEGURO SOCIAL") ~ "INSS",
    stringr::str_detect(nome, "UNIAO") ~ "UNIAO",
    stringr::str_detect(nome, "FUNAI") ~ "FUNAI",
    TRUE ~ nome
  )) |> 
  dplyr::mutate(
    nome = forcats::fct_lump_n(
      nome, 8, other_level = "Outros"
    ),
    nome = forcats::fct_infreq(nome),
    nome = forcats::fct_other(
      nome, drop = "Outros", other_level = "Outros"
    )
  ) |> 
  dplyr::count(nome) |> 
  dplyr::mutate(prop = formattable::percent(n/sum(n),1)) |> 
  knitr::kable(col.names = c("Nome", "N", "%"))

```


### Discussão

A análise do SireneJud indica que empresas de energia são as mais comuns em processos de crime ambiental na região. Já a análise do DataJud não foi possível. Por fim, a análise do TRF1 mostra majoritariamente a União e órgãos como IBAMA, INCRA e FUNAI no polo passivo.

## Questão 5

__Questão__: Existem padrões identificáveis nos casos judicializados quanto às circunstâncias, características dos autores, modalidades e tipos de crimes ambientais?

### Discussão

Esta questão foi discutida nas análises das questões 1 e 2.

## Questão 8

__Questão__: Quais os principais segmentos econômicos ou grupos empresariais que estão envolvidos na cadeia de produção que tenha alguma relação com crime ambiental (indústria de equipamentos pesados, maquinário agrícola, maquinário de mineração, táxi aéreo, bancos e instituições financeiras de fomento agrícola, leasing)?

### Discussão

Esta questão foi discutida na análise da questão 2. A @tbl-cnae mostra que os tipos empresariais mais comuns no polo passivo são empresas de energia, metalurgia e desdobramento de madeira, além de comércio de ferragens e transporte de carga.

## Questão 12

__Questão__: Há correlação entre a incidência de crimes contra a vida ou ameaça em regiões de alta ocorrência de desmatamento, ou mineração ilegal ou crimes ambientais em geral?

Uma possibilidade de análise é comparar índices de homicídios pela população do município com a litigiosidade do município. Para isso, vamos utilizar dados do Sistema Nacional de Informações de Segurança Pública, Prisionais, de Rastreabilidade de Armas e Munições, de Material Genético, de Digitais e de Drogas (SINESP). 

O SINESP por município mostra somente as informações de homicídios dolosos. Ou seja, a base não envolve casos de ameaça. Consideramos o ano de 2021 como referência, que é o ano mais recente com informações completas. A taxa de criminalidade do município foi calculada fazendo-se a razão do número de vítimas por habitante, utilizando os dados de população do Censo de 2010.

### SireneJud

A @fig-dispersao-crim-sirenejud mostra um gráfico de dispersão da taxa de criminalidade comparada com a litigiosidade dos municípios, considerando a base do SireneJud como fonte. Aparentemente, não existe uma relação clara entre as duas quantidades.

```{r}
#| label: fig-dispersao-crim-sirenejud
#| message: false
#| fig-cap: "Gráfico de dispersão da taxa de homicídios e litigiosidade."

da_sirenejud |> 
  dplyr::mutate(
    loc_muni = paste(stringr::str_to_title(loc_muni), loc_uf, sep = " / ")
  ) |> 
  dplyr::group_by(id_municipio, loc_muni) |> 
  dplyr::summarise(
    n = dplyr::n(),
    ilg = dplyr::n() / dplyr::first(pop) * 1e5,
    .groups = "drop"
  ) |> 
  dplyr::inner_join(sinesp, "id_municipio") |> 
  ggplot2::ggplot(ggplot2::aes(x = tx_crim, y = ilg)) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth(se = FALSE) +
  ggplot2::theme_minimal(12) +
  ggplot2::labs(
    x = "Vítimas / 100 mil habitantes",
    y = "Processos / 100 mil habitantes"
  )
```

### DataJud

A @fig-dispersao-crim-datajud mostra um gráfico de dispersão da taxa de criminalidade comparada com a litigiosidade dos municípios, considerando a base do DataJud como fonte. Aparentemente, também não existe uma relação clara entre as duas quantidades.

```{r}
#| label: fig-dispersao-crim-datajud
#| message: false
#| fig-cap: "Gráfico de dispersão da taxa de homicídios e litigiosidade."

da_datajud |> 
  dplyr::mutate(
    muni_nm = paste(stringr::str_to_title(muni_nm), uf_nm, sep = " / ")
  ) |> 
  dplyr::group_by(id_municipio, muni_nm) |> 
  dplyr::summarise(
    n = dplyr::n(),
    ilg = dplyr::n() / dplyr::first(pop) * 1e5,
    .groups = "drop"
  ) |> 
  dplyr::inner_join(sinesp, "id_municipio") |> 
  ggplot2::ggplot(ggplot2::aes(x = tx_crim, y = ilg)) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth(se = FALSE) +
  ggplot2::theme_minimal(12) +
  ggplot2::labs(
    x = "Vítimas / 100 mil habitantes",
    y = "Processos / 100 mil habitantes"
  )
```

### TRF1

O TRF1 não possui informações de município. Seria possível realizar uma análise a partir dos últimos quatro dígitos dos números dos processos, mas seria uma análise muito limitada. Como as outras bases já não mostraram indícios de relação, decidimos por não realizar essa análise.

### Discussão

Nas análises realizadas, não foi identificada uma relação entre índice de homicídios e litigiosidade.

## Questão 14

__Questão__: Qual o tempo de duração médio das ações criminais que envolvam a temática ambiental? 

Como temos processos em andamento, a forma adequada de analisar os tempos é utilizando análise de sobrevivência [@colosimoAnaliseSobrevivenciaAplicada2006]. Faremos isso utilizando gráficos descritivos de Kaplan Meier. 

### SireneJud

O resultado geral é mostrado na @fig-km. Foram retirados tempos maiores de 10 mil dias e tempos menores que zero. A mediana é de aproximadamente 81 meses, ou seja, quase 7 anos.

```{r}
#| label: fig-km
#| fig-cap: "Curva de sobrevivência dos tempos de tramitação dos processos"
km_geral <- da_sirenejud |> 
  dplyr::filter(st_tempo > 0, st_tempo < 10000) |> 
  dplyr::mutate(st_tempo = st_tempo/30.25) |> 
  with(survival::survfit(survival::Surv(st_tempo, st_encerrado) ~ 1))

survminer::ggsurvplot(
  km_geral, 
  data = da_sirenejud, 
  surv.median.line = "hv"
)$plot + 
  ggplot2::scale_colour_viridis_d(begin = .1, end = .9, option = 1) +
  ggplot2::scale_fill_viridis_d(begin = .1, end = .9, option = 1) +
  ggplot2::labs(
    x = "Tempo (meses)", y = "Sobrevivência",
    colour = "", fill = ""
  ) +
  ggplot2::theme(legend.position = "none")
```

A @fig-km-assunto mostra a distribuição dos tempos por assunto, considerando os cinco assuntos com maior volume de processos. As curvas são parecidas em forma e apresentam medianas similares.

```{r}
#| label: fig-km-assunto
#| fig-cap: "Curva de sobrevivência dos tempos de tramitação dos processos, por assunto"
#| fig-height: 6
#| fig-width: 9
aux_km_assunto <- da_sirenejud |> 
  tidyr::unnest(sgt_nm_assunto) |> 
  dplyr::mutate(
    assunto = stringr::str_wrap(sgt_nm_assunto, 20),
    assunto = forcats::fct_lump_n(assunto, 5, other_level = "Outros")
  ) |> 
  dplyr::filter(st_tempo > 0, st_tempo < 10000) |> 
  dplyr::mutate(st_tempo = st_tempo/30.25)

km_assunto <- aux_km_assunto |> 
  with(survival::survfit(survival::Surv(st_tempo, st_encerrado) ~ assunto))

gg <- survminer::ggsurvplot(
  km_assunto, 
  data = aux_km_assunto,
  surv.median.line = "h"
)

gg$plot +
  ggplot2::scale_colour_viridis_d(begin = .1, end = .9, option = 1) +
  ggplot2::labs(
    x = "Tempo (meses)", y = "Sobrevivência",
    colour = "Assunto"
  )
```

A @fig-km-classe mostra os tempos por classe processual. A classe com maior tempo mediano é a execução fiscal, com 189 meses, enquanto a classe com menor tempo mediano é o procedimento comum cível, com 26 meses de duração.

```{r}
#| label: fig-km-classe
#| fig-cap: "Curva de sobrevivência dos tempos de tramitação dos processos, por classe"
#| fig-height: 6
#| fig-width: 9

aux_km_classe <- da_sirenejud |> 
  dplyr::mutate(
    classe = stringr::str_wrap(sgt_nm_classe, 20),
    classe = forcats::fct_lump_n(classe, 5, other_level = "Outros")
  ) |> 
  dplyr::filter(st_tempo > 0, st_tempo < 10000) |> 
  dplyr::mutate(st_tempo = st_tempo/30.25)

km_classe <- aux_km_classe |> 
  with(survival::survfit(survival::Surv(st_tempo, st_encerrado) ~ classe))

gg <- survminer::ggsurvplot(
  km_classe, 
  data = aux_km_classe,
  surv.median.line = "h",
  legend.labs = sort(unique(aux_km_classe$classe))
)

gg$plot +
  ggplot2::scale_colour_viridis_d(begin = .1, end = .9, option = 1) +
  ggplot2::labs(
    x = "Tempo (meses)", y = "Sobrevivência",
    colour = "Classe"
  )
```


A @fig-km-tribunal mostra os tempos por tribunal. Por serem 10 categorias, é um pouco difícil de visualizar todas as curvas. O tribunal com mnor mediana de tempo é o TJRO, com mediana de 43 meses, enquanto o tribunal com maior tempo é o TJMT, com mediana de 100 meses.

```{r}
#| label: fig-km-tribunal
#| fig-cap: "Curva de sobrevivência dos tempos de tramitação dos processos, por tribunal"
#| fig-height: 6
#| fig-width: 9

aux_km_tribunal <- da_sirenejud |> 
  dplyr::mutate(
    assunto = stringr::str_wrap(sgt_nm_assunto, 20),
    assunto = forcats::fct_lump_n(assunto, 5, other_level = "Outros")
  ) |> 
  dplyr::filter(st_tempo > 0, st_tempo < 10000) |> 
  dplyr::mutate(st_tempo = st_tempo/30.25)

km_tribunal <- aux_km_tribunal |> 
  with(survival::survfit(survival::Surv(st_tempo, st_encerrado) ~ trib_tribunal))

gg <- survminer::ggsurvplot(
  km_tribunal, 
  data = aux_km_tribunal,
  surv.median.line = "h",
  legend.labs = sort(unique(aux_km_tribunal$trib_tribunal))
)

gg$plot +
  ggplot2::scale_colour_viridis_d(begin = .1, end = .9, option = 1) +
  ggplot2::labs(
    x = "Tempo (meses)", y = "Sobrevivência",
    colour = "Tribunal"
  )
```

A @fig-km-municipio mostra os tempos por município. O município com maior tempo mediano é Altamira, com 130 meses, enquanto o município com menor tempo mediano é Barcarena, com 24 meses de duração.

```{r}
#| label: fig-km-municipio
#| fig-cap: "Curva de sobrevivência dos tempos de tramitação dos processos, por município"
#| fig-height: 6
#| fig-width: 9

aux_km_muni <- da_sirenejud |> 
  dplyr::mutate(
    loc_muni = paste(stringr::str_to_title(loc_muni), loc_uf, sep = " / "),
    loc_muni = forcats::fct_lump_n(loc_muni, 8, other_level = "Outros")
  ) |> 
  dplyr::filter(st_tempo > 0, st_tempo < 10000) |> 
  dplyr::mutate(st_tempo = st_tempo/30.25)

km_muni <- aux_km_muni |> 
  with(survival::survfit(survival::Surv(st_tempo, st_encerrado) ~ loc_muni))

gg <- survminer::ggsurvplot(
  km_muni, 
  data = aux_km_muni,
  surv.median.line = "h",
  legend.labs = sort(unique(aux_km_muni$loc_muni))
)

gg$plot +
  ggplot2::scale_colour_viridis_d(begin = .1, end = .9, option = 1) +
  ggplot2::labs(
    x = "Tempo (meses)", y = "Sobrevivência",
    colour = "Município"
  )
```



### DataJud

No DataJud, o tempo foi calculado fazendo-se a diferença entre a data de última baixa e a data do primeiro recebimento. O resultado geral é mostrado na @fig-km-datajud. Foram retirados tempos maiores de 10 mil dias e tempos menores que zero. A mediana é de aproximadamente 37 meses, pouco mais de 3 anos.

```{r}
#| label: fig-km-datajud
#| fig-cap: "Curva de sobrevivência dos tempos de tramitação dos processos"
km_geral <- da_datajud |> 
  dplyr::filter(st_tempo > 0, st_tempo < 10000/30.25) |> 
  dplyr::mutate(st_tempo = st_tempo) |> 
  with(survival::survfit(survival::Surv(st_tempo, st_encerrado) ~ 1))

survminer::ggsurvplot(
  km_geral, 
  data = da_datajud, 
  surv.median.line = "hv"
)$plot + 
  ggplot2::scale_colour_viridis_d(begin = .1, end = .9, option = 1) +
  ggplot2::scale_fill_viridis_d(begin = .1, end = .9, option = 1) +
  ggplot2::labs(
    x = "Tempo (meses)", y = "Sobrevivência",
    colour = "", fill = ""
  ) +
  ggplot2::theme(legend.position = "none")
```

A @fig-km-assunto-datajud mostra a distribuição dos tempos por assunto, considerando os cinco assuntos com maior volume de processos. O assunto "Quadrilha ou Bando" apresentou o maior tempo, com 50 meses, enquanto tráfico de drogas apresentou tempo similar à categoria "Outros", com 36 meses.

```{r}
#| label: fig-km-assunto-datajud
#| fig-cap: "Curva de sobrevivência dos tempos de tramitação dos processos, por assunto"
#| fig-height: 6
#| fig-width: 9
aux_km_assunto <- da_datajud |> 
  tidyr::unnest(assunto) |> 
  dplyr::mutate(
    assunto = stringr::str_wrap(assunto, 20),
    assunto = forcats::fct_lump_n(assunto, 5, other_level = "Outros")
  ) |> 
  dplyr::filter(st_tempo > 0, st_tempo < 10000/30.25) |> 
  dplyr::mutate(st_tempo = st_tempo)

km_assunto <- aux_km_assunto |> 
  with(survival::survfit(survival::Surv(st_tempo, st_encerrado) ~ assunto))

gg <- survminer::ggsurvplot(
  km_assunto, 
  data = aux_km_assunto,
  surv.median.line = "h"
)

gg$plot +
  ggplot2::scale_colour_viridis_d(begin = .1, end = .9, option = 1) +
  ggplot2::labs(
    x = "Tempo (meses)", y = "Sobrevivência",
    colour = "Assunto"
  )
```

A @fig-km-tribunal-datajud mostra os tempos por tribunal. O menor tempo mediano identificado foi no TJRR, com mediana de 5 meses, enquanto o maior tempo foi no TJAM, com mediana de 96 meses.

```{r}
#| label: fig-km-tribunal-datajud
#| fig-cap: "Curva de sobrevivência dos tempos de tramitação dos processos, por tribunal"
#| fig-height: 6
#| fig-width: 9

aux_km_tribunal <- da_datajud |> 
  dplyr::filter(st_tempo > 0, st_tempo < 10000/30.25)

km_tribunal <- aux_km_tribunal |> 
  with(survival::survfit(survival::Surv(st_tempo, st_encerrado) ~ tribunal_uf))

gg <- survminer::ggsurvplot(
  km_tribunal, 
  data = aux_km_tribunal,
  surv.median.line = "h",
  legend.labs = sort(unique(aux_km_tribunal$tribunal_uf))
)

gg$plot +
  ggplot2::scale_colour_viridis_d(begin = .1, end = .9, option = 1) +
  ggplot2::labs(
    x = "Tempo (meses)", y = "Sobrevivência",
    colour = "Tribunal"
  )
```

A @fig-km-municipio-datajud mostra os tempos por município. O município com maior tempo mediano é Boa Vista, com 5 meses meses, enquanto o município com menor tempo mediano é Manaus, com 85 meses de duração.

```{r}
#| label: fig-km-municipio-datajud
#| fig-cap: "Curva de sobrevivência dos tempos de tramitação dos processos, por município"
#| fig-height: 6
#| fig-width: 9

aux_km_muni <- da_datajud |> 
  dplyr::mutate(
    nome = paste(stringr::str_to_title(muni_nm), uf_sigla, sep = " / "),
    nome = forcats::fct_lump_n(
      nome, 8, other_level = "Outros"
    ),
    nome = forcats::fct_infreq(nome),
    nome = forcats::fct_other(
      nome, drop = "Outros", other_level = "Outros"
    )
  ) |> 
  dplyr::filter(st_tempo > 0, st_tempo < 10000/30.25)

km_muni <- aux_km_muni |> 
  with(survival::survfit(survival::Surv(st_tempo, st_encerrado) ~ nome))

gg <- survminer::ggsurvplot(
  km_muni, 
  data = aux_km_muni,
  surv.median.line = "h",
  legend.labs = sort(unique(aux_km_muni$nome))
)

gg$plot +
  ggplot2::scale_colour_viridis_d(begin = .1, end = .9, option = 1) +
  ggplot2::labs(
    x = "Tempo (meses)", y = "Sobrevivência",
    colour = "Município"
  )
```

### TRF1

A análise do TRF1 exige um esforço maior no tratamento das movimentações processuais. Para realizar a análise, foram consideradas algumas heurísticas de classificação. Primeiro, o evento de baixa considerado foi o último cuja movimentação apresenta a informação de baixa. O início do processo foi considerado pelo campo `data_de_autuacao`. Todos os processos foram considerados como baixados, já que a pesquisa realizada para listar os processos é retrospectiva. Nesse caso, a análise de sobrevivência não é necessária, mas foi mantida para não mudar as visualizações

No TRF1, o resultado geral é mostrado na é a @fig-km-trf1. Foram retirados tempos maiores de 10 mil dias e tempos menores que zero. A mediana é de aproximadamente 29 meses, ou 2 anos e meio.

```{r}
#| label: fig-km-trf1
#| fig-cap: "Curva de sobrevivência dos tempos de tramitação dos processos"
km_geral <- da_tempo_trf1 |> 
  dplyr::filter(st_tempo > 0, st_tempo < 10000/30.25) |> 
  dplyr::mutate(st_tempo = st_tempo) |> 
  with(survival::survfit(survival::Surv(st_tempo, st_encerrado) ~ 1))

survminer::ggsurvplot(
  km_geral, 
  data = da_tempo_trf1, 
  surv.median.line = "hv"
)$plot + 
  ggplot2::scale_colour_viridis_d(begin = .1, end = .9, option = 1) +
  ggplot2::labs(
    x = "Tempo (meses)", y = "Sobrevivência",
    colour = "", fill = ""
  ) +
  ggplot2::theme(legend.position = "none")
```

A @fig-km-assunto-trf1 mostra a distribuição dos tempos por assunto, considerando os cinco assuntos com maior volume de processos. Os tempos variam pouco por assunto, sendo que o assunto com menor tempo é "Ambiental" e o assunto com maior tempo é o "Rural Art. 4851".

```{r}
#| label: fig-km-assunto-trf1
#| fig-cap: "Curva de sobrevivência dos tempos de tramitação dos processos, por assunto"
#| fig-height: 6
#| fig-width: 9
aux_km_assunto <- da_tempo_trf1 |> 
  dplyr::mutate(assunto = dplyr::case_when(
    stringr::str_detect(assunto, "3618") ~ "Crimes contra o Meio Ambiente e o Patrimônio Genético",
    stringr::str_detect(assunto, "10112") ~ "Revogação de multa ambiental",
    TRUE ~ assunto
  )) |> 
  tidyr::unnest(assunto) |> 
  dplyr::mutate(
    assunto = stringr::str_wrap(assunto, 20),
    assunto = forcats::fct_lump_n(assunto, 5, other_level = "Outros")
  ) |> 
  dplyr::filter(st_tempo > 0, st_tempo < 10000/30.25) |> 
  dplyr::mutate(st_tempo = st_tempo)

km_assunto <- aux_km_assunto |> 
  with(survival::survfit(survival::Surv(st_tempo, st_encerrado) ~ assunto))

gg <- survminer::ggsurvplot(
  km_assunto, 
  data = aux_km_assunto,
  surv.median.line = "h"
)

gg$plot +
  ggplot2::scale_colour_viridis_d(begin = .1, end = .9, option = 1) +
  ggplot2::labs(
    x = "Tempo (meses)", y = "Sobrevivência",
    colour = "Assunto"
  )
```

### Discussão

As três bases apresentam padrões de tempos diferentes. No SireneJud, os processos são longos, com duração mediana maior que 7 anos e o tempo dos processos não varia muito por tema. No DataJud, os processos são um pouco mais rápidos (6 anos), com uma variação considerável por assunto. No TRF1, os processos são mais curtos, o que possivelmente é um efeito do método retrospectivo de coleta, e com pouca variação nas medianas por assunto.


# Referências
